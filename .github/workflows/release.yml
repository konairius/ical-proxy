name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: "1.24"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Run tests
      run: go test -v ./...

    - name: Build binaries
      run: |
        mkdir -p dist
        
        # Linux AMD64
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags="-w -s" -o dist/ical-proxy-linux-amd64 ./server
        
        # Linux ARM64
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a -installsuffix cgo -ldflags="-w -s" -o dist/ical-proxy-linux-arm64 ./server
        
        # Windows AMD64
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -a -installsuffix cgo -ldflags="-w -s" -o dist/ical-proxy-windows-amd64.exe ./server
        
        # macOS AMD64
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -a -installsuffix cgo -ldflags="-w -s" -o dist/ical-proxy-darwin-amd64 ./server
        
        # macOS ARM64
        CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -a -installsuffix cgo -ldflags="-w -s" -o dist/ical-proxy-darwin-arm64 ./server

    - name: Create checksums
      run: |
        cd dist
        sha256sum * > checksums.txt

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:${{ steps.tag.outputs.tag }}
          ghcr.io/${{ github.repository }}:latest
        labels: |
          org.opencontainers.image.title=iCal Proxy
          org.opencontainers.image.description=A proxy server for fixing malformed iCal feeds
          org.opencontainers.image.url=https://github.com/${{ github.repository }}
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.version=${{ steps.tag.outputs.tag }}
          org.opencontainers.image.revision=${{ github.sha }}

    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changelog for this version if CHANGELOG.md exists
          awk '/^## \[.*\]/{if(found) exit; if(/\['${GITHUB_REF#refs/tags/}'\]/) found=1; next} found && /^## \[/{exit} found' CHANGELOG.md > release_notes.md || echo "Release ${{ steps.tag.outputs.tag }}" > release_notes.md
        else
          echo "Release ${{ steps.tag.outputs.tag }}" > release_notes.md
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: release_notes.md
        files: |
          dist/*
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
