apiVersion: apps/v1
kind: Deployment
metadata:
  name: ical-proxy
  namespace: ical-proxy
  labels:
    app: ical-proxy
    app.kubernetes.io/name: ical-proxy
    app.kubernetes.io/instance: ical-proxy
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: ical-proxy-system
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: ical-proxy
  template:
    metadata:
      labels:
        app: ical-proxy
        app.kubernetes.io/name: ical-proxy
        app.kubernetes.io/instance: ical-proxy
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: ical-proxy-system
      annotations:
        prometheus.io/scrape: "false"  # Set to "true" if you add metrics endpoint
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ical-proxy
      containers:
      - name: ical-proxy
        image: ghcr.io/konairius/ical-proxy:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: ical-proxy-config
        # Uncomment if you have secrets
        # - secretRef:
        #     name: ical-proxy-secrets
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        # Uncomment if you need temporary directories
        # volumeMounts:
        # - name: tmp
        #   mountPath: /tmp
      # volumes:
      # - name: tmp
      #   emptyDir: {}
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      imagePullSecrets: [] # Add if using private registry
---
apiVersion: v1
kind: Service
metadata:
  name: ical-proxy-service
  namespace: ical-proxy
  labels:
    app: ical-proxy
    app.kubernetes.io/name: ical-proxy
    app.kubernetes.io/instance: ical-proxy
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: ical-proxy-system
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: ical-proxy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ical-proxy-ingress
  namespace: ical-proxy
  labels:
    app: ical-proxy
    app.kubernetes.io/name: ical-proxy
    app.kubernetes.io/instance: ical-proxy
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: ical-proxy-system
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # Uncomment and modify these annotations based on your setup
    # cert-manager.io/cluster-issuer: letsencrypt-prod
    # nginx.ingress.kubernetes.io/rate-limit: "100"
    # nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - ical-proxy.yourdomain.com  # Replace with your domain
    secretName: ical-proxy-tls
  rules:
  - host: ical-proxy.yourdomain.com  # Replace with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ical-proxy-service
            port:
              number: 80
